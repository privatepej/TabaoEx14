<?xml version="1.0" encoding="UTF-8"?><testrun name="TestChekcStr" project="tabaoex14" tests="181" started="181" failures="18" errors="30" ignored="0">
  <testsuite name="org.acumen.training.codes.test.TestChekcStr" time="0.45" displayname="TestChekcStr" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]">
    <testsuite name="testBinarise1to10(org.acumen.training.codes.test.TestChekcStr)" time="0.172" displayname="testBinarise1to10(int)" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]">
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.172" dynamicTest="true" displayname="repetition 1 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#1]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.002" dynamicTest="true" displayname="repetition 2 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#2]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 3 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#3]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 4 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#4]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 5 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#5]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 6 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#6]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 7 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#7]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 8 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#8]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 9 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#9]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 10 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#10]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 11 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#11]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 12 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#12]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 13 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#13]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 14 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#14]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 15 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#15]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 16 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#16]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 17 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#17]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 18 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#18]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 19 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#19]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 20 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#20]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 21 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#21]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 22 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#22]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 23 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#23]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 24 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#24]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 25 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#25]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 26 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#26]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="repetition 27 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#27]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 28 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#28]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 29 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#29]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:104)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="repetition 30 of 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#30]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [int arg0] in method [public void org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(int)].
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)
	at java.base/java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:108)
	at java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:712)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.013" dynamicTest="true" displayname="[31] 1" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#31]"/>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.005" dynamicTest="true" displayname="[32] 2" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#32]">
        <failure>
          <expected>10</expected>
          <actual>01</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;10&gt; but was: &lt;01&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(TestChekcStr.java:42)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[33] 3" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#33]"/>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.013" dynamicTest="true" displayname="[34] 4" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#34]">
        <failure>
          <expected>100</expected>
          <actual>001</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;100&gt; but was: &lt;001&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(TestChekcStr.java:42)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[35] 5" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#35]"/>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[36] 6" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#36]">
        <failure>
          <expected>110</expected>
          <actual>011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;110&gt; but was: &lt;011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(TestChekcStr.java:42)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[37] 7" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#37]"/>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.002" dynamicTest="true" displayname="[38] 8" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#38]">
        <failure>
          <expected>1000</expected>
          <actual>0001</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;1000&gt; but was: &lt;0001&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(TestChekcStr.java:42)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[39] 9" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#39]"/>
      <testcase name="testBinarise1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[40] 10" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10(int)]/[test-template-invocation:#40]">
        <failure>
          <expected>1010</expected>
          <actual>0101</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;1010&gt; but was: &lt;0101&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testBinarise1to10(TestChekcStr.java:42)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
    </testsuite>
    <testsuite name="testBinariseAtoE(org.acumen.training.codes.test.TestChekcStr)" time="0.002" displayname="testBinariseAtoE(char)" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoE(char)]">
      <testcase name="testBinariseAtoE" classname="org.acumen.training.codes.test.TestChekcStr" time="0.002" dynamicTest="true" displayname="[1] a" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoE(char)]/[test-template-invocation:#1]"/>
      <testcase name="testBinariseAtoE" classname="org.acumen.training.codes.test.TestChekcStr" time="0.002" dynamicTest="true" displayname="[2] b" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoE(char)]/[test-template-invocation:#2]"/>
      <testcase name="testBinariseAtoE" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] c" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoE(char)]/[test-template-invocation:#3]"/>
      <testcase name="testBinariseAtoE" classname="org.acumen.training.codes.test.TestChekcStr" time="0.008" dynamicTest="true" displayname="[4] d" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoE(char)]/[test-template-invocation:#4]"/>
      <testcase name="testBinariseAtoE" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[5] e" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoE(char)]/[test-template-invocation:#5]"/>
    </testsuite>
    <testsuite name="testBinarise1to10Rainy(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testBinarise1to10Rainy(int)" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]">
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1] 1" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#1]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[2] 2" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#2]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] 3" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#3]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[4] 4" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#4]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[5] 5" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#5]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[6] 6" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#6]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[7] 7" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#7]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[8] 8" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#8]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[9] 9" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#9]"/>
      <testcase name="testBinarise1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[10] 10" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinarise1to10Rainy(int)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testBinariseAtoERainy(org.acumen.training.codes.test.TestChekcStr)" time="0.006" displayname="testBinariseAtoERainy(char)" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoERainy(char)]">
      <testcase name="testBinariseAtoERainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.005" dynamicTest="true" displayname="[1] a" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoERainy(char)]/[test-template-invocation:#1]"/>
      <testcase name="testBinariseAtoERainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[2] b" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoERainy(char)]/[test-template-invocation:#2]"/>
      <testcase name="testBinariseAtoERainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] c" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoERainy(char)]/[test-template-invocation:#3]"/>
      <testcase name="testBinariseAtoERainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[4] d" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoERainy(char)]/[test-template-invocation:#4]"/>
      <testcase name="testBinariseAtoERainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[5] e" parameters="char" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseAtoERainy(char)]/[test-template-invocation:#5]"/>
    </testsuite>
    <testsuite name="testBinariseNotMoreThan10(org.acumen.training.codes.test.TestChekcStr)" time="0.0" displayname="testBinariseNotMoreThan10(int)" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]">
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[1] 1" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#1]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[2] 2" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#2]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] 3" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#3]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[4] 4" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#4]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[5] 5" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#5]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[6] 6" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#6]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.005" dynamicTest="true" displayname="[7] 7" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#7]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[8] 8" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#8]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[9] 9" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#9]"/>
      <testcase name="testBinariseNotMoreThan10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[10] 10" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseNotMoreThan10(int)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testBinariseCheckEmpty(org.acumen.training.codes.test.TestChekcStr)" time="0.0" displayname="testBinariseCheckEmpty(int)" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]">
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[1] 1" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#1]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[2] 2" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#2]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] 3" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#3]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[4] 4" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#4]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[5] 5" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#5]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[6] 6" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#6]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[7] 7" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#7]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[8] 8" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#8]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[9] 9" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#9]"/>
      <testcase name="testBinariseCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[10] 10" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmpty(int)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testBinariseCheckEmptyRainy(org.acumen.training.codes.test.TestChekcStr)" time="0.005" displayname="testBinariseCheckEmptyRainy(int)" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]">
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.005" dynamicTest="true" displayname="[1] 1" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#1]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[2] 2" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#2]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[3] 3" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#3]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[4] 4" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#4]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[5] 5" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#5]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[6] 6" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#6]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[7] 7" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#7]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[8] 8" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#8]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[9] 9" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#9]"/>
      <testcase name="testBinariseCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[10] 10" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy(int)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testBinariseCheckEmptyRainy2(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testBinariseCheckEmptyRainy2(int)" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]">
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1] 1" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#1]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[2] 2" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#2]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[3] 3" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#3]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[4] 4" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#4]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[5] 5" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#5]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.004" dynamicTest="true" displayname="[6] 6" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#6]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[7] 7" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#7]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[8] 8" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#8]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[9] 9" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#9]"/>
      <testcase name="testBinariseCheckEmptyRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[10] 10" parameters="int" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testBinariseCheckEmptyRainy2(int)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testTotalAscii(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testTotalAscii(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]">
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1] 1" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[2] 2" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] 3" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[4] 4" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#4]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[5] 5" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#5]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[6] 6" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#6]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[7] 7" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#7]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[8] 8" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#8]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[9] 9" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#9]"/>
      <testcase name="testTotalAscii" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[10] 10" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAscii(java.lang.String)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testTotalAsciiEmptyStringRainy(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testTotalAsciiEmptyStringRainy(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]">
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1] 1" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[2]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#2]">
        <failure>org.opentest4j.AssertionFailedError: need try catch.. ==&gt; Unexpected exception thrown: java.lang.NumberFormatException: For input string: " "
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:152)
	at org.junit.jupiter.api.AssertDoesNotThrow.createAssertionFailedError(AssertDoesNotThrow.java:84)
	at org.junit.jupiter.api.AssertDoesNotThrow.assertDoesNotThrow(AssertDoesNotThrow.java:53)
	at org.junit.jupiter.api.AssertDoesNotThrow.assertDoesNotThrow(AssertDoesNotThrow.java:40)
	at org.junit.jupiter.api.Assertions.assertDoesNotThrow(Assertions.java:3218)
	at org.acumen.training.codes.test.TestChekcStr.testTotalAsciiEmptyStringRainy(TestChekcStr.java:121)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
Caused by: java.lang.NumberFormatException: For input string: " "
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:648)
	at java.base/java.lang.Integer.parseInt(Integer.java:778)
	at org.acumen.training.codes.test.TestChekcStr.lambda$0(TestChekcStr.java:122)
	at org.junit.jupiter.api.AssertDoesNotThrow.assertDoesNotThrow(AssertDoesNotThrow.java:49)
	... 49 more

</failure>
      </testcase>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[3] 3" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[4] 4" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#4]"/>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[5] 5" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#5]"/>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[6] 6" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#6]"/>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[7] 7" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#7]"/>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[8] 8" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#8]"/>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[9] 9" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#9]"/>
      <testcase name="testTotalAsciiEmptyStringRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[10] 10" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy(java.lang.String)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testTotalAsciiEmptyString(org.acumen.training.codes.test.TestChekcStr)" time="0.0" displayname="testTotalAsciiEmptyString(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyString(java.lang.String)]">
      <testcase name="testTotalAsciiEmptyString" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[1]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyString(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
    <testsuite name="testTotalAsciiWhiteSpace(org.acumen.training.codes.test.TestChekcStr)" time="0.005" displayname="testTotalAsciiWhiteSpace(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiWhiteSpace(java.lang.String)]">
      <testcase name="testTotalAsciiWhiteSpace" classname="org.acumen.training.codes.test.TestChekcStr" time="0.005" dynamicTest="true" displayname="[1]  10001111" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiWhiteSpace(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
    <testsuite name="testTotalAsciiEmptyStringRainy2(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testTotalAsciiEmptyStringRainy2(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy2(java.lang.String)]">
      <testcase name="testTotalAsciiEmptyStringRainy2" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiEmptyStringRainy2(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
    <testsuite name="testTotalAsciiRainy(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testTotalAsciiRainy(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]">
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1] 1" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[2] 2" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[3] 3" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[4] 4" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#4]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[5] 5" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#5]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[6] 6" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#6]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[7] 7" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#7]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[8] 8" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#8]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[9] 9" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#9]"/>
      <testcase name="testTotalAsciiRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[10] 10" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalAsciiRainy(java.lang.String)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testTotalCheckEmpty(org.acumen.training.codes.test.TestChekcStr)" time="0.0" displayname="testTotalCheckEmpty(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]">
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[1] 1" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[2] 2" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] 3" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[4] 4" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#4]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[5] 5" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#5]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[6] 6" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#6]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[7] 7" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#7]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[8] 8" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#8]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[9] 9" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#9]"/>
      <testcase name="testTotalCheckEmpty" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[10] 10" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmpty(java.lang.String)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testTotalCheckEmptyRainy(org.acumen.training.codes.test.TestChekcStr)" time="0.0" displayname="testTotalCheckEmptyRainy(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]">
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[1] 1" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[2] 2" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[3] 3" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[4] 4" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#4]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[5] 5" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#5]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[6] 6" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#6]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[7] 7" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#7]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[8] 8" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#8]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[9] 9" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#9]"/>
      <testcase name="testTotalCheckEmptyRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[10] 10" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalCheckEmptyRainy(java.lang.String)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testTotalWhiteSpace(org.acumen.training.codes.test.TestChekcStr)" time="0.0" displayname="testTotalWhiteSpace(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalWhiteSpace(java.lang.String)]">
      <testcase name="testTotalWhiteSpace" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[1]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalWhiteSpace(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
    <testsuite name="testTotalWhiteSpaceRainy(org.acumen.training.codes.test.TestChekcStr)" time="0.0" displayname="testTotalWhiteSpaceRainy(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalWhiteSpaceRainy(java.lang.String)]">
      <testcase name="testTotalWhiteSpaceRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[1]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testTotalWhiteSpaceRainy(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
    <testsuite name="testConvertChar1to10(org.acumen.training.codes.test.TestChekcStr)" time="0.005" displayname="testConvertChar1to10(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]">
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.005" dynamicTest="true" displayname="[1] 1" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#1]">
        <failure>
          <expected>[Ljava.lang.String;@2c07545f</expected>
          <actual>100011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;100011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[2] 2" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#2]">
        <failure>
          <expected>[Ljava.lang.String;@22f31dec</expected>
          <actual>010011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;010011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] 3" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#3]">
        <failure>
          <expected>[Ljava.lang.String;@c94fd30</expected>
          <actual>110011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;110011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.005" dynamicTest="true" displayname="[4] 4" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#4]">
        <failure>
          <expected>[Ljava.lang.String;@7f0d96f2</expected>
          <actual>001011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;001011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[5] 5" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#5]">
        <failure>
          <expected>[Ljava.lang.String;@524f3b3a</expected>
          <actual>101011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;101011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[6] 6" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#6]">
        <failure>
          <expected>[Ljava.lang.String;@29526c05</expected>
          <actual>011011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;011011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[7] 7" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#7]">
        <failure>
          <expected>[Ljava.lang.String;@45312be2</expected>
          <actual>111011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;111011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.005" dynamicTest="true" displayname="[8] 8" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#8]">
        <failure>
          <expected>[Ljava.lang.String;@7331196b</expected>
          <actual>000111</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;000111&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[9] 9" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#9]">
        <failure>
          <expected>[Ljava.lang.String;@50d13246</expected>
          <actual>100111</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;100111&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
      <testcase name="testConvertChar1to10" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[10] 10" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10(java.lang.String)]/[test-template-invocation:#10]">
        <failure>
          <expected>[Ljava.lang.String;@3d3e5463</expected>
          <actual>1000011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;[110001, 110010, 110011, 110100, 110101, 110110, 110111, 111000, 111001, 111010]&gt; but was: &lt;1000011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar1to10(TestChekcStr.java:204)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
    </testsuite>
    <testsuite name="testConvertChar1to10Rainy(org.acumen.training.codes.test.TestChekcStr)" time="0.017" displayname="testConvertChar1to10Rainy(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]">
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.017" dynamicTest="true" displayname="[1] 1" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[2] 2" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[3] 3" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[4] 4" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#4]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.012" dynamicTest="true" displayname="[5] 5" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#5]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[6] 6" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#6]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[7] 7" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#7]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.011" dynamicTest="true" displayname="[8] 8" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#8]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[9] 9" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#9]"/>
      <testcase name="testConvertChar1to10Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.0" dynamicTest="true" displayname="[10] 10" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar1to10Rainy(java.lang.String)]/[test-template-invocation:#10]"/>
    </testsuite>
    <testsuite name="testConvertChar0(org.acumen.training.codes.test.TestChekcStr)" time="0.011" displayname="testConvertChar0(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar0(java.lang.String)]">
      <testcase name="testConvertChar0" classname="org.acumen.training.codes.test.TestChekcStr" time="0.011" dynamicTest="true" displayname="[1] 0" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar0(java.lang.String)]/[test-template-invocation:#1]">
        <failure>
          <expected>110000</expected>
          <actual>000011</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;110000&gt; but was: &lt;000011&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertChar0(TestChekcStr.java:222)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
    </testsuite>
    <testsuite name="testConvertChar0Rainy(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testConvertChar0Rainy(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar0Rainy(java.lang.String)]">
      <testcase name="testConvertChar0Rainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1] 0" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertChar0Rainy(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
    <testsuite name="testConvertCharSpace(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testConvertCharSpace(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertCharSpace(java.lang.String)]">
      <testcase name="testConvertCharSpace" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertCharSpace(java.lang.String)]/[test-template-invocation:#1]">
        <failure>
          <expected>100000</expected>
          <actual>000001</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;100000&gt; but was: &lt;000001&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at org.acumen.training.codes.test.TestChekcStr.testConvertCharSpace(TestChekcStr.java:241)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


        </failure>
      </testcase>
    </testsuite>
    <testsuite name="testConvertCharSpaceRainy(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testConvertCharSpaceRainy(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertCharSpaceRainy(java.lang.String)]">
      <testcase name="testConvertCharSpaceRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertCharSpaceRainy(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
    <testsuite name="testConvertTrueSpace(org.acumen.training.codes.test.TestChekcStr)" time="0.01" displayname="testConvertTrueSpace(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertTrueSpace(java.lang.String)]">
      <testcase name="testConvertTrueSpace" classname="org.acumen.training.codes.test.TestChekcStr" time="0.01" dynamicTest="true" displayname="[1]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertTrueSpace(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
    <testsuite name="testConvertTrueSpaceRainy(org.acumen.training.codes.test.TestChekcStr)" time="0.001" displayname="testConvertTrueSpaceRainy(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertTrueSpaceRainy(java.lang.String)]">
      <testcase name="testConvertTrueSpaceRainy" classname="org.acumen.training.codes.test.TestChekcStr" time="0.001" dynamicTest="true" displayname="[1]" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:org.acumen.training.codes.test.TestChekcStr]/[test-template:testConvertTrueSpaceRainy(java.lang.String)]/[test-template-invocation:#1]"/>
    </testsuite>
  </testsuite>
</testrun>
